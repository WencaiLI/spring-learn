<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwc.mybatis.db.dao.generated.AccountDAO">
  <resultMap id="BaseResultMap" type="com.lwc.mybatis.db.genarated.model.Account">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="subdivide" jdbcType="VARCHAR" property="subdivide" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="created_user" jdbcType="INTEGER" property="createdUser" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modified_user" jdbcType="INTEGER" property="modifiedUser" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="level_one" jdbcType="VARCHAR" property="levelOne" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, subdivide, time, money, comment, created_user, created_date, modified_user, 
    modified_date, status, is_delete, level_one
  </sql>
  <select id="selectByExample" parameterType="com.lwc.mybatis.db.genarated.model.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from accounts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from accounts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lwc.mybatis.db.genarated.model.AccountExample">
    delete from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lwc.mybatis.db.genarated.model.Account">
    insert into accounts (id, type, subdivide, 
      time, money, comment, 
      created_user, created_date, modified_user, 
      modified_date, status, is_delete, 
      level_one)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, #{subdivide,jdbcType=VARCHAR}, 
      #{time,jdbcType=DATE}, #{money,jdbcType=DECIMAL}, #{comment,jdbcType=VARCHAR}, 
      #{createdUser,jdbcType=INTEGER}, #{createdDate,jdbcType=TIMESTAMP}, #{modifiedUser,jdbcType=INTEGER}, 
      #{modifiedDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{levelOne,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lwc.mybatis.db.genarated.model.Account">
    insert into accounts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="subdivide != null">
        subdivide,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="createdUser != null">
        created_user,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="modifiedUser != null">
        modified_user,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="levelOne != null">
        level_one,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="subdivide != null">
        #{subdivide,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="levelOne != null">
        #{levelOne,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lwc.mybatis.db.genarated.model.AccountExample" resultType="java.lang.Long">
    select count(*) from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update accounts
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.subdivide != null">
        subdivide = #{record.subdivide,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.createdUser != null">
        created_user = #{record.createdUser,jdbcType=INTEGER},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUser != null">
        modified_user = #{record.modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="record.modifiedDate != null">
        modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.levelOne != null">
        level_one = #{record.levelOne,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update accounts
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      subdivide = #{record.subdivide,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=DATE},
      money = #{record.money,jdbcType=DECIMAL},
      comment = #{record.comment,jdbcType=VARCHAR},
      created_user = #{record.createdUser,jdbcType=INTEGER},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      modified_user = #{record.modifiedUser,jdbcType=INTEGER},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      level_one = #{record.levelOne,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lwc.mybatis.db.genarated.model.Account">
    update accounts
    <set>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="subdivide != null">
        subdivide = #{subdivide,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        created_user = #{createdUser,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUser != null">
        modified_user = #{modifiedUser,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="levelOne != null">
        level_one = #{levelOne,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lwc.mybatis.db.genarated.model.Account">
    update accounts
    set type = #{type,jdbcType=CHAR},
      subdivide = #{subdivide,jdbcType=VARCHAR},
      time = #{time,jdbcType=DATE},
      money = #{money,jdbcType=DECIMAL},
      comment = #{comment,jdbcType=VARCHAR},
      created_user = #{createdUser,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      modified_user = #{modifiedUser,jdbcType=INTEGER},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      level_one = #{levelOne,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>